@page "/"

@layout EmptyLayout

@inject NavigationManager NavigationManager
@inject IUnitOfWork Services;

@rendermode InteractiveServer

@code {
    private User? currentUser;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            currentUser = await Services.UserService.GetCurrentUserAsync();

            if (currentUser != null)
            {
                if (currentUser.Role == Models.UserRole.Teacher)
                {
                    NavigationManager.NavigateTo($"/dashboard");
                }

                else if (currentUser.Role == Models.UserRole.Student)
                {
                    var courses = await Services.CourseService.GetAllUsersCourses(currentUser.UserId);
                    NavigationManager.NavigateTo($"/modules/{courses.FirstOrDefault().CourseId}");
                }
            }

            else
            {
                NavigationManager.NavigateTo("/login");
            }

            StateHasChanged();
        }
    }
}
